import telebot
import requests
from telebot import types
import os
from dotenv import load_dotenv

load_dotenv()
API = os.getenv('API')
BOT_TOKEN = os.getenv('BOT_TOKEN')
bot = telebot.TeleBot(BOT_TOKEN)

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è –∏ —è–∑—ã–∫–∞
user_units = {}
user_languages = {}

# –°–ª–æ–≤–∞—Ä—å —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ –¥–ª—è –ø–æ–≥–æ–¥—ã
translations = {
    "ru": {
        "welcome": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –ø–æ–º–æ–≥—É —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ. \n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:",
        "weather": "üå¶ –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}:",
        "temperature": "üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}",
        "feels_like": "üå¨ –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like}",
        "humidity": "üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%",
        "wind_speed": "üå™ –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind} –º/—Å",
        "weather_condition": "üå§ {weather}",
        "unit_changed": "–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {unit}. \n\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥.",
        "language_changed": "–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {language}. \n\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥.",
        "choose_city": "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:",
        "choose_unit": "–í—ã–±–µ—Ä–∏—Ç–µ –µ–¥–∏–Ω–∏—Ü—É –∏–∑–º–µ—Ä–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã:",
        "choose_language": "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:",
        "city_not_found": "üö´ –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    },
    "en": {
        "welcome": "Welcome! I can help you with weather information. \n\nChoose an option below:",
        "weather": "üå¶ Weather in {city}:",
        "temperature": "üå° Temperature: {temp}",
        "feels_like": "üå¨ Feels like: {feels_like}",
        "humidity": "üíß Humidity: {humidity}%",
        "wind_speed": "üå™ Wind speed: {wind} m/s",
        "weather_condition": "üå§ {weather}",
        "unit_changed": "Temperature unit set to {unit}. \n\nNow choose a city.",
        "language_changed": "Language changed to {language}. \n\nNow choose a city.",
        "choose_city": "Choose a city:",
        "choose_unit": "Choose a temperature unit:",
        "choose_language": "Choose a language:",
        "city_not_found": "üö´ City not found!"
    },
    "kk": {
        "welcome": "“ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑! –ú–µ–Ω —Å—ñ–∑–¥—ñ“£ “õ–∞–ª–∞“£—ã–∑–¥—ã“£ –∞—É–∞ —Ä–∞–π—ã —Ç—É—Ä–∞–ª—ã –º”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä –±–µ—Ä—É “Ø—à—ñ–Ω –∫”©–º–µ–∫—Ç–µ—Å–µ–º—ñ–Ω. \n\n–¢”©–º–µ–Ω–¥–µ –±—ñ—Ä–µ—É—ñ–Ω —Ç–∞“£–¥–∞“£—ã–∑:",
        "weather": "üå¶ “ö–∞–ª–∞–¥–∞“ì—ã –∞—É–∞ —Ä–∞–π—ã {city}:",
        "temperature": "üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}",
        "feels_like": "üå¨ “ö–∞–ª–∞–π —Å–µ–∑—ñ–ª–µ–¥—ñ: {feels_like}",
        "humidity": "üíß –´–ª“ì–∞–ª–¥—ã–ª—ã“õ: {humidity}%",
        "wind_speed": "üå™ –ñ–µ–ª–¥—ñ“£ –∂—ã–ª–¥–∞–º–¥—ã“ì—ã: {wind} –º/—Å",
        "weather_condition": "üå§ {weather}",
        "unit_changed": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞–Ω—ã“£ ”©–ª—à–µ–º –±—ñ—Ä–ª—ñ–≥—ñ {unit} –µ—Ç—ñ–ø ”©–∑–≥–µ—Ä—Ç—ñ–ª–¥—ñ. \n\n–ï–Ω–¥—ñ “õ–∞–ª–∞–Ω—ã —Ç–∞“£–¥–∞“£—ã–∑.",
        "language_changed": "–¢—ñ–ª {language} –¥–µ–ø ”©–∑–≥–µ—Ä—Ç—ñ–ª–¥—ñ. \n\n–ï–Ω–¥—ñ “õ–∞–ª–∞–Ω—ã —Ç–∞“£–¥–∞“£—ã–∑.",
        "choose_city": "“ö–∞–ª–∞–Ω—ã —Ç–∞“£–¥–∞“£—ã–∑:",
        "choose_unit": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞–Ω—ã“£ ”©–ª—à–µ–º –±—ñ—Ä–ª—ñ–≥—ñ–Ω —Ç–∞“£–¥–∞“£—ã–∑:",
        "choose_language": "–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:",
        "city_not_found": "üö´ “ö–∞–ª–∞ —Ç–∞–±—ã–ª–º–∞–¥—ã!"
    }
}

# –†—É—á–Ω–æ–π –ø–µ—Ä–µ–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏–π –ø–æ–≥–æ–¥—ã –Ω–∞ –∫–∞–∑–∞—Ö—Å–∫–∏–π —è–∑—ã–∫
weather_translations = {
    "clear sky": "–ê—à—ã“õ –∞—Å–ø–∞–Ω",
    "few clouds": "–ê–∑–¥–∞“ì–∞–Ω –±“±–ª—Ç—Ç–∞—Ä",
    "scattered clouds": "–¢–∞—Ä–∞–ª“ì–∞–Ω –±“±–ª—Ç—Ç–∞—Ä",
    "broken clouds": "–ñ–∞—Ä—Ç—ã–ª–∞–π –±“±–ª—Ç—Ç—ã",
    "shower rain": "–ñ–∞“£–±—ã—Ä –∂–∞—É—É—ã",
    "rain": "–ñ–∞“£–±—ã—Ä",
    "thunderstorm": "–ñ—ã–ª“ì–∞–ª—ã“õ",
    "snow": "“ö–∞—Ä",
    "mist": "–¢“±–º–∞–Ω"
}

@bot.message_handler(commands=['start'])
def main(message):
    user_lang = user_languages.get(message.chat.id, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(message.chat.id, translations[user_lang]["welcome"])
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    button1 = types.KeyboardButton('–ê—Å—Ç–∞–Ω–∞')
    markup.row(button1)
    button2 = types.KeyboardButton('–ê–ª–º–∞—Ç—ã')
    button3 = types.KeyboardButton('–ö–∞—Ä–∞–≥–∞–Ω–¥–∞')
    markup.row(button2, button3)
    bot.send_message(message.chat.id, translations[user_lang]["choose_city"], reply_markup=markup)

@bot.message_handler(commands=['unit'])
def set_unit(message):
    user_lang = user_languages.get(message.chat.id, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è
    unit_markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    button_celsius = types.KeyboardButton('¬∞C')
    button_fahrenheit = types.KeyboardButton('¬∞F')
    button_kelvin = types.KeyboardButton('K')
    unit_markup.row(button_celsius, button_fahrenheit, button_kelvin)
    bot.send_message(message.chat.id, translations[user_lang]["choose_unit"], reply_markup=unit_markup)

@bot.message_handler(commands=['language'])
def set_language(message):
    user_lang = user_languages.get(message.chat.id, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
    lang_markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    button_russian = types.KeyboardButton('–†—É—Å—Å–∫–∏–π')
    button_english = types.KeyboardButton('English')
    button_kazakh = types.KeyboardButton('“ö–∞–∑–∞“õ—à–∞')
    lang_markup.row(button_russian, button_english, button_kazakh)
    bot.send_message(message.chat.id, translations[user_lang]["choose_language"], reply_markup=lang_markup)

@bot.message_handler(content_types=['text'])
def get_weather(message):
    user_lang = user_languages.get(message.chat.id, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ - —ç—Ç–æ –≤—ã–±–æ—Ä –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
    if message.text in ['¬∞C', '¬∞F', 'K']:
        user_units[message.chat.id] = message.text
        bot.send_message(message.chat.id, translations[user_lang]["unit_changed"].format(unit=message.text))
        return

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ - —ç—Ç–æ –≤—ã–±–æ—Ä —è–∑—ã–∫–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
    if message.text in ['–†—É—Å—Å–∫–∏–π', 'English', '“ö–∞–∑–∞“õ—à–∞']:
        user_languages[message.chat.id] = 'ru' if message.text == '–†—É—Å—Å–∫–∏–π' else 'en' if message.text == 'English' else 'kk'
        bot.send_message(message.chat.id, translations[user_lang]["language_changed"].format(language=message.text))
        return

    # –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ–¥ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    city = message.text
    unit = user_units.get(message.chat.id, '¬∞C')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ¬∞C
    language = user_languages.get(message.chat.id, 'ru')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–¥–∏–Ω–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è API
    if unit == '¬∞C':
        unit_param = 'metric'
    elif unit == '¬∞F':
        unit_param = 'imperial'
    elif unit == 'K':
        unit_param = 'standard'

    url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}&units={unit_param}&lang={language}'
    response = requests.get(url)
    data = response.json()

    if response.status_code == 200:
        main = data['main']
        temp = main['temp']
        feels_like = main['feels_like']
        humidity = main['humidity']
        wind = data['wind']['speed']
        weather = data['weather'][0]['description']

        # –ï—Å–ª–∏ —è–∑—ã–∫ –∫–∞–∑–∞—Ö—Å–∫–∏–π, –ø–µ—Ä–µ–≤–æ–¥–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã
        if language == 'kk':
            weather = weather_translations.get(weather, weather)  # –ü–µ—Ä–µ–≤–æ–¥–∏–º, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ, –∏–Ω–∞—á–µ –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å

        # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ —Å—Ç—Ä–æ–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è
        if unit == '¬∞C':
            temp_str = f'{temp}¬∞C'
            feels_like_str = f'{feels_like}¬∞C'
        elif unit == '¬∞F':
            temp_str = f'{temp}¬∞F'
            feels_like_str = f'{feels_like}¬∞F'
        elif unit == 'K':
            temp_str = f'{temp} K'
            feels_like_str = f'{feels_like} K'

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ \n –º–µ–∂–¥—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏
        response_message = f"{translations[user_lang]['weather'].format(city=city)}\n" + \
                           f"üå° {translations[user_lang]['temperature'].format(temp=temp_str)}\n" + \
                           f"üå¨ {translations[user_lang]['feels_like'].format(feels_like=feels_like_str)}\n" + \
                           f"üíß {translations[user_lang]['humidity'].format(humidity=humidity)}\n" + \
                           f"üå™ {translations[user_lang]['wind_speed'].format(wind=wind)}\n" + \
                           f"üå§ {translations[user_lang]['weather_condition'].format(weather=weather)}"
        bot.send_message(message.chat.id, response_message)
    else:
        bot.send_message(message.chat.id, translations[user_lang]["city_not_found"])

@bot.message_handler(func=lambda message: message.text in ['–ê—Å—Ç–∞–Ω–∞', '–ê–ª–º–∞—Ç—ã', '–ö–∞—Ä–∞–≥–∞–Ω–¥–∞'])
def handle_city_buttons(message):
    get_weather(message)

bot.polling(non_stop=True)
